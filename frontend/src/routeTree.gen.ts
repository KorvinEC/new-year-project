/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as CreateImport } from './routes/create'
import { Route as PathlessImport } from './routes/_pathless'
import { Route as IndexImport } from './routes/index'
import { Route as TemplatesIndexImport } from './routes/templates/index'
import { Route as CardsIndexImport } from './routes/cards/index'
import { Route as TemplatesCreateImport } from './routes/templates/create'
import { Route as CardsCreateImport } from './routes/cards/create'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CreateRoute = CreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRoute,
} as any)

const PathlessRoute = PathlessImport.update({
  id: '/_pathless',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TemplatesIndexRoute = TemplatesIndexImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => rootRoute,
} as any)

const CardsIndexRoute = CardsIndexImport.update({
  id: '/cards/',
  path: '/cards/',
  getParentRoute: () => rootRoute,
} as any)

const TemplatesCreateRoute = TemplatesCreateImport.update({
  id: '/templates/create',
  path: '/templates/create',
  getParentRoute: () => rootRoute,
} as any)

const CardsCreateRoute = CardsCreateImport.update({
  id: '/cards/create',
  path: '/cards/create',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_pathless': {
      id: '/_pathless'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/cards/create': {
      id: '/cards/create'
      path: '/cards/create'
      fullPath: '/cards/create'
      preLoaderRoute: typeof CardsCreateImport
      parentRoute: typeof rootRoute
    }
    '/templates/create': {
      id: '/templates/create'
      path: '/templates/create'
      fullPath: '/templates/create'
      preLoaderRoute: typeof TemplatesCreateImport
      parentRoute: typeof rootRoute
    }
    '/cards/': {
      id: '/cards/'
      path: '/cards'
      fullPath: '/cards'
      preLoaderRoute: typeof CardsIndexImport
      parentRoute: typeof rootRoute
    }
    '/templates/': {
      id: '/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PathlessRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/cards/create': typeof CardsCreateRoute
  '/templates/create': typeof TemplatesCreateRoute
  '/cards': typeof CardsIndexRoute
  '/templates': typeof TemplatesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PathlessRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/cards/create': typeof CardsCreateRoute
  '/templates/create': typeof TemplatesCreateRoute
  '/cards': typeof CardsIndexRoute
  '/templates': typeof TemplatesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_pathless': typeof PathlessRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/cards/create': typeof CardsCreateRoute
  '/templates/create': typeof TemplatesCreateRoute
  '/cards/': typeof CardsIndexRoute
  '/templates/': typeof TemplatesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/create'
    | '/login'
    | '/register'
    | '/cards/create'
    | '/templates/create'
    | '/cards'
    | '/templates'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/create'
    | '/login'
    | '/register'
    | '/cards/create'
    | '/templates/create'
    | '/cards'
    | '/templates'
  id:
    | '__root__'
    | '/'
    | '/_pathless'
    | '/create'
    | '/login'
    | '/register'
    | '/cards/create'
    | '/templates/create'
    | '/cards/'
    | '/templates/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PathlessRoute: typeof PathlessRoute
  CreateRoute: typeof CreateRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  CardsCreateRoute: typeof CardsCreateRoute
  TemplatesCreateRoute: typeof TemplatesCreateRoute
  CardsIndexRoute: typeof CardsIndexRoute
  TemplatesIndexRoute: typeof TemplatesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PathlessRoute: PathlessRoute,
  CreateRoute: CreateRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  CardsCreateRoute: CardsCreateRoute,
  TemplatesCreateRoute: TemplatesCreateRoute,
  CardsIndexRoute: CardsIndexRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_pathless",
        "/create",
        "/login",
        "/register",
        "/cards/create",
        "/templates/create",
        "/cards/",
        "/templates/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_pathless": {
      "filePath": "_pathless.tsx"
    },
    "/create": {
      "filePath": "create.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/cards/create": {
      "filePath": "cards/create.tsx"
    },
    "/templates/create": {
      "filePath": "templates/create.tsx"
    },
    "/cards/": {
      "filePath": "cards/index.tsx"
    },
    "/templates/": {
      "filePath": "templates/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
